//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjWebWCF1.MeuServicoWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Filme", Namespace="http://schemas.datacontract.org/2004/07/Dados")]
    [System.SerializableAttribute()]
    public partial class Filme : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AnoLancamentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AnoLancamento {
            get {
                return this.AnoLancamentoField;
            }
            set {
                if ((this.AnoLancamentoField.Equals(value) != true)) {
                    this.AnoLancamentoField = value;
                    this.RaisePropertyChanged("AnoLancamento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genero {
            get {
                return this.GeneroField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneroField, value) != true)) {
                    this.GeneroField = value;
                    this.RaisePropertyChanged("Genero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MeuServicoWCF.IServico")]
    public interface IServico {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServico/inserir", ReplyAction="http://tempuri.org/IServico/inserirResponse")]
        bool inserir(Entidade.FilmeVO filmeVO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServico/inserir", ReplyAction="http://tempuri.org/IServico/inserirResponse")]
        System.Threading.Tasks.Task<bool> inserirAsync(Entidade.FilmeVO filmeVO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServico/Listar", ReplyAction="http://tempuri.org/IServico/ListarResponse")]
        ProjWebWCF1.MeuServicoWCF.Filme[] Listar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServico/Listar", ReplyAction="http://tempuri.org/IServico/ListarResponse")]
        System.Threading.Tasks.Task<ProjWebWCF1.MeuServicoWCF.Filme[]> ListarAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicoChannel : ProjWebWCF1.MeuServicoWCF.IServico, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicoClient : System.ServiceModel.ClientBase<ProjWebWCF1.MeuServicoWCF.IServico>, ProjWebWCF1.MeuServicoWCF.IServico {
        
        public ServicoClient() {
        }
        
        public ServicoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool inserir(Entidade.FilmeVO filmeVO) {
            return base.Channel.inserir(filmeVO);
        }
        
        public System.Threading.Tasks.Task<bool> inserirAsync(Entidade.FilmeVO filmeVO) {
            return base.Channel.inserirAsync(filmeVO);
        }
        
        public ProjWebWCF1.MeuServicoWCF.Filme[] Listar() {
            return base.Channel.Listar();
        }
        
        public System.Threading.Tasks.Task<ProjWebWCF1.MeuServicoWCF.Filme[]> ListarAsync() {
            return base.Channel.ListarAsync();
        }
    }
}
